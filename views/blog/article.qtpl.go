// Code generated by qtc from "article.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package blog

import (
	"sumbur/views"
)

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func (article *Article) StreamArticle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`<section id="article-`)
	qw422016.N().D(article.article_id)
	qw422016.N().S(`" class="mt-4">

<div class="row">

<div class="col">
<h4>`)
	qw422016.E().Z(article.title)
	if !article.public {
		qw422016.N().S(`<span class="ms-3 text-danger">â˜¥</span>`)
	}
	qw422016.N().S(`</h4>
<div>
`)
	qw422016.N().Z(article.body_ht)
	qw422016.N().S(`
</div>
</div>

<div class="col text-end"></div>

</div>

<div class="row mt-2">

<div class="col">
`)
	for _, tag := range article.tags {
		if string(tag) == *article.stag {
			qw422016.N().S(`<a href="/" class="me-2"><span class="badge bg-primary">`)
			qw422016.E().Z(tag)
			qw422016.N().S(`</span></span></a>`)
		} else {
			qw422016.N().S(`<a href="/tag/`)
			qw422016.E().Z(tag)
			qw422016.N().S(`" class="me-2"><span class="badge bg-secondary">`)
			qw422016.E().Z(tag)
			qw422016.N().S(`</span></a>`)
		}
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`</div>

<div class="col small text-end text-secondary">`)
	views.StreamDate(qw422016, article.created)
	qw422016.N().S(`</div>

</div>

</section>
`)
}

func (article *Article) WriteArticle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	article.StreamArticle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (article *Article) Article() string {
	qb422016 := qt422016.AcquireByteBuffer()
	article.WriteArticle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
