// Code generated by qtc from "tags.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package blog

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func (tags *Tags) StreamTags(qw422016 *qt422016.Writer) {
	qw422016.N().S(`<div class=fs-5>
`)
	for tags.Next() {
		if string(tags.tag) == *tags.stag {
			qw422016.N().S(`<a href="/" class="me-2"><span class="badge bg-primary">`)
			qw422016.E().Z(tags.tag)
			qw422016.N().S(`<span class="small ms-2">`)
			qw422016.N().D(tags.count)
			qw422016.N().S(`</span></span></a>`)
		} else {
			qw422016.N().S(`<a href="/tag/`)
			qw422016.E().Z(tags.tag)
			qw422016.N().S(`" class="me-2"><span class="badge bg-secondary">`)
			qw422016.E().Z(tags.tag)
			qw422016.N().S(`<span class="small ms-2">`)
			qw422016.N().D(tags.count)
			qw422016.N().S(`</span></span></a>`)
		}
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`</div>
`)
}

func (tags *Tags) WriteTags(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	tags.StreamTags(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (tags *Tags) Tags() string {
	qb422016 := qt422016.AcquireByteBuffer()
	tags.WriteTags(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
